<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize player
spd = 6;
hspd = 0;
vspd = 0;
grow = true;

state = player_move_state;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///execute state

script_execute(state);

if(audio_is_playing(snd_Buzz))
{
    if(distance_to_object(obj_nanoBots) &gt;= 400)
    {
        audio_stop_sound(snd_Buzz);
    }
}

if (grow == true){
image_xscale += .008;
image_yscale += .008;
    if(image_xscale &gt;= 1.1){
    grow = false;
    }
}

if (grow == false){
image_xscale -= .008;
image_yscale -= .008;
    if(image_xscale &lt;= 1){
    grow = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_nanoBots">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage the player when they get touched by nanobots
if (sprite_index != spr_PlayerHurt)
{
    if (obj_PlayerStats.playerHealth == obj_PlayerStats.playerHealthMin)
    {
        room_goto(rm_gameOver);
        obj_PlayerStats.playerHealth = obj_PlayerStats.playerHealthMax;
        obj_PlayerStats.hasESD = false;
    }
    sprite_index = spr_PlayerHurt;
    image_speed = .165;
    obj_PlayerStats.playerHealth -= 10;
    audio_play_sound(snd_Hurt, 5, false);
    if (target_right(other))
    {
        hspd = -30;
    }
    else
    {
        hspd = 30;
    }
    
    if (target_above(other))
    {
        vspd = -30;
    }
    else
    {
        vspd = 30;
    }
    move(obj_Solid, obj_Desk);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fire Projectile

if (obj_PlayerStats.playerEnergy &gt;= 50 &amp;&amp; obj_PlayerStats.hasESD) {
    with (instance_create(x,y, obj_Esd)) {
        image_angle = other.direction;
        attached = other.id;
        offsetDir = x - other.x;
        offsetDist = y - other.y;
        initialAngle = 0;
        obj_PlayerStats.playerEnergy -= energyCost;
    }  
    audio_sound_gain(audio_play_sound(snd_Zap, 5, false), 0.7, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get the player out of hurt animation
if (sprite_index = spr_PlayerHurt)
{
    sprite_index = spr_Player;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
